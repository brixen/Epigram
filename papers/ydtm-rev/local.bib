

@Unpublished{henrik:dynamic-optimisation,
  author = 	 {Henrik Nilsson},
  title = 	 {{D}ynamic {O}ptimization
                  in {F}unctional {R}eactive {P}rogramming
                  using {G}eneralized {A}lgebraic {D}ata {T}ypes},
  note = 	 {submitted to ICFP 2005},
  year = 2005
}

@MANUAL{CoqManualV8,
  AUTHOR = {The {Coq} Development Team},
  TITLE = {{The Coq Proof Assistant Reference Manual -- Version V8.0}},
  YEAR = 2004,
  MONTH = APR,
  URL = {http://coq.inria.fr},
  TOPICS = {team,lri},
  TYPE_PUBLI = {manuel}
}

@book{nuprl-book,
  author =    "Constable, Robert L. and Stuart F. Allen and H. M. Bromley and 
               W. R. Cleaveland and J. F. Cremer and R. W. Harper and Douglas J. Howe and 
               T. B. Knoblock and N. P. Mendler and P. Panangaden and James T. Sasaki and
               Scott F. Smith",
  title =     "Implementing Mathematics with the {N}uprl Development System",
  publisher = "Prentice-Hall",
  year =      1986,
  address =   "NJ",
  url = "citeseer.ist.psu.edu/constable86implementing.html" }


@Misc{gonthier:four,
  author =	 {Georges Gonthier},
  title =	 {The Four Color Theorem in {Coq}},
  howpublished = {Talk given at the TYPES 2004 conference},
  month =	 {December},
  year =	 {2004},
}

@inproceedings{DML99,
author = "Hongwei Xi and Frank Pfenning",
title = {Dependent Types in Practical Programming},
booktitle = "Proceedings of the 26th ACM SIGPLAN Symposium on Principles of Programming Languages",
year = 1999,
month = "January",
address = "San Antonio",
pages = "214--227"
}



@InProceedings{coquand99structured,
  author = "Catarina Coquand and Thierry Coquand",
  title = "Structured type theory",
  year = "1999",
  booktitle = 	 {Proc. Workshop on Logical Frameworks and Meta-languages (LFM'99)}
}

@UNPUBLISHED{peyton-jones-wobbly,
  AUTHOR = {Simon {Peyton Jones} and Geoffrey Washburn and
                 Stephanie Weirich},
  TITLE = {Wobbly types: type inference for generalised algebraic
                 data types},
  MONTH = JUL,
  YEAR = {2004},
  NOTE = {Manuscript},
  URL = {http://research.microsoft.com/Users/simonpj/papers/gadt/}
}


@phdthesis{magnusson94implementation,
    author = "Lena Magnusson",
    title = "The Implementation of {ALF}---a Proof Editor Based on {M}artin-{L}{\"o}f's Monomorphic Type Theory with Explicit Substitution",
  school = 	 {Chalmers University of Technology, Gothenburg, Sweden},
    year = "1994",
    url = "citeseer.ist.psu.edu/magnusson95implementation.html" }


@INPROCEEDINGS{sheard-04,
  AUTHOR = {Tim Sheard},
  TITLE = {Languages of the Future},
  BOOKTITLE = {ACM Conference on Object-Oriented Programming,
                 Systems, Languages, and Applications (OOPSLA)},
  MONTH = OCT,
  YEAR = {2004},
  PAGES = {116--119},
  URL = {http://doi.acm.org/10.1145/1028664.1028711}
}

@techreport{ChH03Pha,
    author    = {Cheney, James and Hinze, Ralf},
    institution = {Cornell University},
    title     = {First-Class Phantom Types},
    year      = 2003
}


@inproceedings{ATStypes03,
author = "Hongwei Xi",
title = {{Applied Type System (extended abstract)}},
booktitle = "post-workshop Proceedings of TYPES 2003",
publisher = "Springer-Verlag LNCS 3085",
year = "2004",
pages = "394--408",
abstract = {{
The framework Pure Type System (PTS) offers a simple and general
approach to designing and formalizing type systems. However, in the
presence of dependent types, there often exist some acute problems that
make it difficult for PTS to accommodate many common realistic
programming features such as general recursion, recursive types, effects
(e.g., exceptions, references, input/output), etc. In this paper, we
propose a new framework Applied Type System (ATS) to allow for designing
and formalizing type systems that can readily support common realistic
programming features. The key salient feature of ATS lies in a complete
separation between statics, in which types are formed and reasoned about,
and dynamics, in which programs are constructed and evaluated. With this
separation, it is no longer possible for a program to occur in a type as is
otherwise allowed in PTS.  We present not only a formal development of
ATS but also mention some examples in support of using ATS as a
framework to form type systems for practical programming.
}}
}


@inproceedings{BaSw02,
  author    = {Baars, Arthur~I. and Swierstra, S.~Doaitse},
  title     = {Typing dynamic typing},
  booktitle = {Proceedings of the seventh ACM SIGPLAN international conference on Functional programming},
  editor    = {Peyton Jones, S.},
  year      = {2002},
  isbn      = {1-58113-487-8},
  pages     = {157--166},
  location  = {Pittsburgh, PA, USA},
  doi       = {http://doi.acm.org/10.1145/581478.581494},
  publisher = {ACM Press},
}

@article{Hin00Man,
    author    = {Hinze, Ralf},
    journal   = {Journal of Functional Programming, Special Issue on Algorithmic Aspects of Functional Programming Languages},
    month     = sep,
    number    = 5,
    pages     = {493--524},
    title     = {Manufacturing Datatypes},
    volume    = 11,
    year      = 2001
}

@PhdThesis{edwin:phd,
  author = 	 {Edwin Brady},
  title = 	 {Practical Implementation of a Dependently Typed Functional Programming Language},
  school = 	 {The University of Durham},
  year = 	 {2005},
  OPTkey = 	 {},
  OPTtype = 	 {},
  OPTaddress = 	 {},
  OPTmonth = 	 {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@InProceedings{epigram-afp,
  author =	 {Conor McBride},
  title =	 {Epigram: Practical Programming with Dependent Types},
  crossref = {afp2004}
}



@InProceedings{hughes:afp-arrows,
  author = 	 {John Hughes},
  title = 	 {Programming with arrows},
  crossref =	 {afp2004}
}

@Misc{epigram-man,
  author = 	 {Conor McBride},
  title =	 {The {Epigram} Prototype: a nod and two winks},
  howpublished = {Available from the Epigram homepage},
  year =	 {2004},
}



@Misc{venanzio-general,
  author =	 {Venanzio Capretta},
  title =	 {General Recursion via Coinductive Types},
  howpublished = {Manuscript, available from Capretta's homepage},
  year =	 {2005},
}

@InProceedings{MagnussonNordstrom94:ALF,
  author =       "Lena Magnusson and Bengt Nordstr{\"o}m",
  title =        "The {ALF} proof editor and its proof engine",
  booktitle =    "International Workshop on Types for Proofs and
                 Programs (TYPES) , Nijmegen, The Netherlands , {\rm
                 May, 1993}",
  year =         "1994",
  series =       "Lecture Notes in Computer Science",
  publisher =    "Springer-Verlag",
  volume =       "806",
  pages =        "213--237",
}

@Misc{Morris:bctcs05,
  author =	 {Peter Morris},
  title =	 {Generic Programming in a Dependently Typed Language},
  howpublished = {Talk given at the British Colloqium for Theoretical Computer Science},
  year =	 {2005},
}

@Book{afp2004,
  editor =	 {Varmo Vene and Tarmo Uustalu},
  title = 	 {{A}dvanced {F}unctional {P}rogramming 2004},
  publisher = 	 {Springer-Verlag},
  year = 	 {2005+},
  series =	 {Lecture Notes in Computer Science},
  note =	 {Revised lecture notes from the International Summer School
                  in Tartu, Estonia}
}

@Article{benke.dybjer.jansson:universes,
  author = 	 {Marcin Benke and Peter Dybjer and Patrik Jansson},
  title = 	 {Universes for generic programs and proofs in dependent type theory},
  journal = 	 {Nordic Journal of Computing},
  year = 	 {2003},
  volume =	 {10},
  pages =	 {265-269}
}

@article{hinze.jeuring:tidts,
    author    = {Hinze, Ralf and Jeuring, Johan and L{\"o}h, Andres},
    journal   = {Science of Computer Programmming},
    pages     = {117-151},
    title     = {Type-indexed data types},
    volume    = 51,
    year      = 2004
}

@PhdThesis{mh:PhD,
  author = 	 "Martin Hofmann",
  title = 	 "Extensional concepts in intensional type theory",
  school = 	 "University of Edinburgh",
  year = 	 "1995",
}

@TECHREPORT{necula1996,
  AUTHOR = {George C. Necula and Peter Lee},
  TITLE = {Proof-Carrying Code},
  INSTITUTION = {Computer Science Department, Carnegie Mellon University},
  NUMBER = {CMU-CS-96-165},
  MONTH = SEP,
  YEAR = 1996
}

@article{hamid03:safpcc,
  author=        {Nadeem A. Hamid and Zhong Shao and Valery Trifonov and Stefan Monnier and Zhaozhong Ni},
  title=         {A Syntactic Approach to Foundational Proof Carrying-Code},
  journal={Journal of Automated Reasoning (Special issue on Proof-Carrying Code)},
  volume={31},
  number={3-4},
  pages={191-229},
  month=dec,
  year={2003}
}