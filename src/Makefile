################################################################
# Configuration
################################################################

################
#### GHC

HC              = ghc
HC_PACKAGE      = -package mtl -package pretty
HC_OPTS_DEV     = $(HC_PACKAGE)
HC_OPTS_TEST    = $(HC_PACKAGE) -fhpc
HC_OPTS_RELEASE = $(HC_PACKAGE) -O2
HC_OPTS         = $(HC_OPTS_DEV)
BUILD_MODE	= BUILD_DEV


################
#### PDFLaTeX

LATEXC = pdflatex
LATEXOPTS = -interaction=nonstopmode


################################################################
# Configuration
################################################################

SRCS := $(wildcard *.lhs) \
	$(wildcard Cochon/*.lhs) \
	$(wildcard Compiler/*.lhs) \
	$(wildcard DisplayLang/*.lhs) \
	$(wildcard Evidences/*.lhs) \
	$(wildcard Features/*.lhs) \
	$(wildcard Kit/*.lhs) \
	$(wildcard ProofState/*.lhs) \
	$(wildcard NameSupply/*.lhs) \
	$(wildcard Tactics/*.lhs)
OBJS := $(SRCS:.lhs=.o) 

.SUFFIXES : .o .hs .hi .lhs .hc .s\
	    .hi-boot .lhs-boot .o-boot

################################################################
# Rules
################################################################

## Default rule:
#     * build dependency graph
#     * make Epigram binary
#     * make the literate document
all: 
	$(MAKE) depend 
	$(MAKE) Pig Epitome

## Dependency graph:
# Ask GHC to compute the dependency graph.
#
# This calls She on every source file, therefore it is painfully
# slow. Unless explicitly asked to, we avoid running it.
#
# The dependency graph is broken wrt. She aspects: the typical example
# is Features.lhs, which import code from Sigma for example. Changing
# Sigma.lhs causes the re-compilation of the (empty) file Sigma.lhs,
# without causing the re-compilation of Rules.lhs, for example.
depend : $(SRCS)
	$(HC) -M -dep-makefile .depend $(SRCS)
dep : depend


## Epigram:
# Link the Epigram binary. Rely on the dependency graph to compile the
# code. If the dependency graph doesn't exist or has changed, this
# will go wrong: "make dep" needs to be run to solve the issue.
#
# This might be broken, as She aspects seem to be ill-handled by the
# dependency graph generated by GHC.
#
# Pig takes its orders from HC_OPTS and build a BUILD_MODE. By
# default, this is a BUILD_DEV, with the corresponding DEV flags.
Pig : .depend $(OBJS)
	rm -f $@
	$(HC) -o $@ $(HC_OPTS) $(OBJS)
	touch $(BUILD_MODE)

# Then, there are several flavors of build:

# Release: when compilation is slow, things go fast
release: .depend
	$(MAKE) HC_OPTS="$(HC_OPTS_RELEASE)"\
	        BUILD_MODE="BUILD_RELEASE" Pig 

# Test: with code coverage
btest: .depend
	$(MAKE) HC_OPTS="$(HC_OPTS_TEST)"\
	        BUILD_MODE="BUILD_TEST" Pig


## Literate code:
# Try to stop as soon as possible, but it's still 2-3
# compilations. Rely on "Epitome.tex" to translate the literate code
# to latex.
#
# Look at the "tome" for a quick but dirty compilation of the Epitome
Epitome : Epitome.tex Epitome.bib
	$(LATEXC) $(LATEXOPTS) Epitome
	bibtex Epitome
	$(LATEXC) $(LATEXOPTS) Epitome
	if egrep Rerun Epitome.log; then $(LATEXC) $(LATEXOPTS) Epitome; fi

Epitome.tex : $(SRCS) stuff.fmt
	lhs2TeX --poly Epitome.lhs -o Epitome.tex

## Literate code in LaTeX:
# Same, with 'latex'
dvi : Epitome.dvi
Epitome.dvi : Epitome.tex
	latex Epitome
	bibtex Epitome
	latex Epitome
	if egrep Rerun Epitome.log; then latex Epitome; fi


## Literate code (in a hurry):
# To quickly check that no LaTeX bug has been introduced.
#
# However, the generated document will be incomplete wrt. references,
# bibliography entries, etc.
Atome:
	lhs2TeX --poly Epitome.lhs -o Epitome.tex
	pdflatex Epitome

## Unit testing (haha):
test:
	cd ../test && ./test.sh -q

## Tags (emacs):
etags:
	hasktags -e `find . -name "*.lhs"`

## Clean:
clean:
	rm -f $(SRCS:.lhs=.o)          \
	      $(SRCS:.lhs=.hers)       \
	      $(SRCS:.lhs=.hi)         \
	      $(SRCS:.lhs=.o-boot)     \
              $(SRCS:.lhs=.hi-boot)    \
	      BUILD_DEV                \
	      BUILD_RELEASE            \
	      BUILD_TEST               \
	      *.aux *.bbl              \
	      *.blg *.log *.ptb        \
	      Epitome.tex              \
	      Epitome.toc


################################################################
# Automatic rules
################################################################

## Include the dependency graph
-include .depend

## Standard suffix rules

.o.hi:
	@:

.lhs.o:
ifeq ($(or $(if $(wildcard BUILD_*),,1), \
	   $(wildcard $(BUILD_MODE))),)
	# Previous .o files might be left from a previous build mode
	$(error "Messing up different builds. Please 'make clean'.")
endif
	$(HC) -c $< $(HC_OPTS)

.hs.o:
	$(HC) -c $< $(HC_OPTS)

.o-boot.hi-boot:
	@:

.lhs-boot.o-boot:
	$(HC) -c $< $(HC_OPTS)

.hs-boot.o-boot:
	$(HC) -c $< $(HC_OPTS)
