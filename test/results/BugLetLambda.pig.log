Let there be idescInduction.
\ I : Set ->
\ x : IDesc I ->
\ P : (IDesc I -> Set) ->
\ psA^2 : :- ((E : EnumU)(T : Enum E -> IDesc I) => FF) ->
\ psA^1 : :- ((E : EnumU)(T : branches E (\ _ -> IDesc I)) => FF) ->
\ psA : :- ((x : IDesc I)(y : IDesc I) => FF) ->
\ methodVar : ((i : I) -> P ('varD i)) ->
\ methodConst : ((K : Set) -> P ('constD K)) ->
\ methodPi : ((S : Set)(T : S -> IDesc I) -> P ('piD S T)) ->
\ methodSigma : ((S : Set)(T : S -> IDesc I) -> P ('sigmaD S T)) ->
Loaded.
