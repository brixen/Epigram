[ f
    [ a := ? : Set ;
      \ x : Set ->
      b := ? : Set ;
      \ y : Set ->
      c := ? : Set ;
    ] ? : Set ;
  g := ? : Set ;
]
Moving cursor up...
[ f
    [ a := ? : Set ;
      \ x : Set ->
      b := ? : Set ;
      \ y : Set ->
      c := ? : Set ;
    ] ? : Set ;
  ---
  g := ? : Set ;
]
Going in...
[ a := ? : Set ;
  \ x : Set ->
  b := ? : Set ;
  \ y : Set ->
  c := ? : Set ;
] ? : Set
Going out...
[ f
    [ a := ? : Set ;
      \ x : Set ->
      b := ? : Set ;
      \ y : Set ->
      c := ? : Set ;
    ] ? : Set ;
  ---
  g := ? : Set ;
]
Going in...
[ a := ? : Set ;
  \ x : Set ->
  b := ? : Set ;
  \ y : Set ->
  c := ? : Set ;
] ? : Set
Going in...
a, x, b, y
Going up...
a, x
Going up...

Going down...
a, x
Going out...
[ a := ? : Set ;
  \ x : Set ->
  b := ? : Set ;
  ---
  \ y : Set ->
  c := ? : Set ;
] ? : Set
Moving cursor down...
[ a := ? : Set ;
  \ x : Set ->
  b := ? : Set ;
  \ y : Set ->
  ---
  c := ? : Set ;
] ? : Set
Going in...
a, x
I'm sorry, Dave. I'm afraid I can't do that.
Error: cursorDown: cannot move cursor down.
I'm sorry, Dave. I'm afraid I can't do that.
Error: cursorUp: cannot move cursor up.
Going down...
:= ? : Set
Going out...
[ a := ? : Set ;
  \ x : Set ->
  b := ? : Set ;
  \ y : Set ->
  c := ? : Set ;
] ? : Set
Going down...
:= ? : Set
I'm sorry, Dave. I'm afraid I can't do that.
Error: goDown: you can't go that way.
Going up...
I'm sorry, Dave. I'm afraid I can't do that.
Error: goUp: you can't go that way.
[ a := ? : Set ;
  \ x : Set ->
  b := ? : Set ;
  \ y : Set ->
  c := ? : Set ;
] ? : Set
Going out...
I'm sorry, Dave. I'm afraid I can't do that.
Error: goOutProperly: you can't go that way.
Going in...
Going in...
I'm sorry, Dave. I'm afraid I can't do that.
Error: goIn: you can't go that way.
a, x, b, y
Going to root...
[ f
    [ a := ? : Set ;
      \ x : Set ->
      b := ? : Set ;
      \ y : Set ->
      c := ? : Set ;
    ] ? : Set ;
  g := ? : Set ;
]
Going in...
Going up...
Moving cursor up...
Going down...
:= ? : Set
Going to root...
[ f
    [ a := ? : Set ;
      \ x : Set ->
      b := ? : Set ;
      \ y : Set ->
      c := ? : Set ;
    ] ? : Set ;
  g := ? : Set ;
]
Loaded.
